{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"cin": {
		"prefix": "ci",
		"body": [
			"cin >> $1;"
		],
		"description": "cin"
	},
	"cout": {
		"prefix": "co",
		"body": [
			"cout << $1 << endl;"
		],
		"description": "cout"
	},
	"main function": {
		"prefix": "m",
		"body": [
			"#include <bits/stdc++.h>",
			"#define rep(i, n) for(int i = 0; i < (int)(n); i++)",
			"using namespace std;",
			"typedef long long ll;",
			"const ll INF = (ll)1 << 60;",
			"",
			"int main() {",
			"\t$1",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "basic main function"
	},
	"while true": {
		"prefix": "w",
		"body": [
			"while(true) {",
			"\t${1:/* code */}",
			"}"
		],
		"description": "while(true) loop"
	},
	"basic for": {
		"prefix": "f",
		"body": [
			"for(int ${1:i} = 0; ${1:i} < ${2:max}; ${1:i}++) {",
			"\t$3",
			"}"
		],
		"description": "basic for loop"
	},
	"basic cout": {
		"prefix": "c",
		"body": [
			"cout << ${1:/* code */} << endl;"
		],
		"description": "basic cout"
	},
	"basic vector": {
		"prefix": "v",
		"body": [
			"vector<${1:int}> ${2:A}(${3:N});"
		],
		"description": "basic vector"
	}
}